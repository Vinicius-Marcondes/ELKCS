
# Logstash Pipeline made to parse hybris's logs
# Author: VinÃ­cius Marcondes
# Date: 16/04/2020

input{
  beats {
    port => 5044
  }
}

filter{
  if [fields][log_prefix] == "hybris"{
    mutate {
      copy => {
        "[fields][log_prefix]" => "[@metadata][log_prefix]"
        "[fields][log_idx]" => "[@metadata][index]"
      }
    }
    grok{
      patterns_dir => "./patterns"
      match => [ "message", "(?<wrapper_loglevel>[^\|\s]+)([^\|]*\|){3}\s*(?<logdate>%{YEAR}/%{MONTHNUM}/%{MONTHDAY} %{TIME})([^\|]*\|)\s*(\[[^m]*m)*(?<message_status>[^\|\s]+)"]
    }
    date {
      match => [ "logdate", "yyyy/MM/dd HH:mm:ss.SSS" ]
      #remove_field => [ "logdate" ]
    }
  }
  else if [fileset][module] == "nginx" {
    if [fileset][name] == "access" {
      grok {
        match => { "message" => ["%{IPORHOST:[nginx][access][remote_ip]} - %{DATA:[nginx][access][user_name]} \[%{HTTPDATE:[nginx][access][time]}\] \"%{WORD:[nginx][access][method]} %{DATA:[nginx][access][url]} HTTP/%{NUMBER:[nginx][access][http_version]}\" %{NUMBER:[nginx][access][response_code]} %{NUMBER:[nginx][access][body_sent][bytes]} \"%{DATA:[nginx][access][referrer]}\" \"%{DATA:[nginx][access][agent]}\""] }
        remove_field => "message"
      }
      mutate {
        add_field => { "read_timestamp" => "%{@timestamp}" }
      }
      date {
        match => [ "[nginx][access][time]", "dd/MMM/YYYY:H:m:s Z" ]
        remove_field => "[nginx][access][time]"
      }
      useragent {
        source => "[nginx][access][agent]"
        target => "[nginx][access][user_agent]"
        remove_field => "[nginx][access][agent]"
      }
      geoip {
        source => "[nginx][access][remote_ip]"
        target => "[nginx][access][geoip]"
      }
    }
    else if [fileset][name] == "error" {
      grok {
        match => { "message" => ["%{DATA:[nginx][error][time]} \[%{DATA:[nginx][error][level]}\] %{NUMBER:[nginx][error][pid]}#%{NUMBER:[nginx][error][tid]}: (\*%{NUMBER:[nginx][error][connection_id]} )?%{GREEDYDATA:[nginx][error][message]}"] }
        remove_field => "message"
      }
      mutate {
        rename => { "@timestamp" => "read_timestamp" }
      }
      date {
        match => [ "[nginx][error][time]", "YYYY/MM/dd H:m:s" ]
        remove_field => "[nginx][error][time]"
      }
    }
  }

} 

output {
  if [fields][log_prefix] == "hybris" {
    elasticsearch { 
      hosts => ["elasticsearch:9200"]
      user => "elastic"
      password => "changeme"
      index => "%{[@metadata][index]}-%{+YYYY.MM.dd}"
    }
  }
  else{
    elasticsearch {
    hosts => ["elasticsearch:9200"]
    user => "elastic"
    password => "changeme"
    index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
  }
  }

  # For debug, prints the parsed logs in stdout
  # stdout{ codec => json }
}